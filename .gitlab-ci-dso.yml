include:
  - project: $CATALOG_PATH
    file:
      - vault-ci.yml
    ref: main

cache:
  paths:
    - node_modules

variables:
  TAG: ""
  REGISTRY_URL: "${IMAGE_REPOSITORY}"

stages:
  - init
  - build-images
  - deploy

init-read-secret:
  stage: init
  extends:
    - .vault:read_secret

init-variables:
  stage: init
  script:
    - apt-get update && apt-get install --no-install-recommends --yes git
    - |
      if [ -n "$(git describe --exact-match --tags $(git log -n1 --pretty='%h'))" ]; then
        TAG=$(git describe --tags $(git log -n1 --pretty='%h'))
      else
        TAG=$(git rev-parse --short HEAD)
      fi
    - echo "TAG=$TAG"
    - echo "TAG=$TAG" >> var.env
  artifacts: 
    reports:
      dotenv: var.env


build-backend:
  variables:
    WORKING_DIR: "."
    DOCKERFILE: packages/backend/Dockerfile
    IMAGE_NAME: backend
  stage: build-images
  extends:
    - .kaniko:simple-build-push

build-migrations:
  variables:
    WORKING_DIR: packages/migrations
    DOCKERFILE: Dockerfile
    IMAGE_NAME: migrations
  stage: build-images
  extends:
    - .kaniko:simple-build-push

build-frontend-usagers:
  variables:
    WORKING_DIR: "."
    DOCKERFILE: packages/frontend-usagers/Dockerfile
    IMAGE_NAME: frontend-usagers
    SENTRY_PROJECT: "vao-usagers"
  stage: build-images
  extends:
    - .kaniko:simple-build-push

build-frontend-bo:
  variables:
    WORKING_DIR: "."
    DOCKERFILE: packages/frontend-bo/Dockerfile
    IMAGE_NAME: frontend-bo
    SENTRY_PROJECT: "vao-admin"
  stage: build-images
  extends:
    - .kaniko:simple-build-push


.kaniko:simple-build-push:
  variables:
    DOCKERFILE: Dockerfile
    WORKING_DIR: .
    IMAGE_NAME: ""
    SENTRY_PROJECT: ""
    SENTRY_AUTH_TOKEN: "${SENTRY_AUTH_TOKEN}"
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - if [ ! -z $CA_BUNDLE ]; then cat $CA_BUNDLE >> /kaniko/ssl/certs/additional-ca-cert-bundle.crt; fi
    - mkdir -p /kaniko/.docker
    - echo "$DOCKER_AUTH" > /kaniko/.docker/config.json
    - echo "$SENTRY_AUTH_TOKEN" > /kaniko/sentry_auth_token
    - echo "SENTRY_AUTH_TOKEN="
    - echo "$SENTRY_AUTH_TOKEN" | sed 's/^\(...\).*\(...\)$/\1...\2/'
    - /kaniko/executor --build-arg http_proxy=$http_proxy
      --build-arg https_proxy=$https_proxy
      --build-arg no_proxy=$no_proxy
      --build-arg SENTRY_URL="https://sentry.fabrique.social.gouv.fr"
      --build-arg SENTRY_ORG="incubateur"
      --build-arg SENTRY_PROJECT="$SENTRY_PROJECT"
      --build-arg SENTRY_AUTH_TOKEN="$SENTRY_AUTH_TOKEN"
      --build-arg SENTRY_RELEASE="$TAG"
      --context="$CI_PROJECT_DIR/$WORKING_DIR"
      --dockerfile="$CI_PROJECT_DIR/$WORKING_DIR/$DOCKERFILE"
      --registry-mirror=nexus-docker-proxy.apps.c6.numerique-interieur.com 
      --destination $REGISTRY_URL/$IMAGE_NAME:$TAG

deploy:
  stage: deploy
  variables:
      GITHUB_TOKEN_INFRA_REPO: "${GITHUB_TOKEN_INFRA_REPO}"
  script:
    - echo "Deploying tag $TAG from branch $CI_COMMIT_REF_SLUG"
    - apt-get update && apt-get install --no-install-recommends --yes curl ca-certificates
    - |
      if [[ "$CI_COMMIT_REF_SLUG" == "main" ]]; then
        ENVIRONMENT=main
      elif [[ "$CI_COMMIT_REF_SLUG" == "preprod" ]]; then
        ENVIRONMENT=preprod
      fi

      echo "Environment: $ENVIRONMENT"
      if [[ -n "$ENVIRONMENT" ]]; then
        curl -X POST \
        -H "Accept: application/vnd.github.v3+json" \
        -H "Authorization: token $GITHUB_TOKEN_INFRA_REPO" \
        https://api.github.com/repos/DNUm-socialgouv/vao-infra-pi/dispatches \
        -d "{\"event_type\":\"deploy-event\", \"client_payload\": {\"environment\": \"$ENVIRONMENT\", \"appTag\": \"$TAG\"}}"
      fi
